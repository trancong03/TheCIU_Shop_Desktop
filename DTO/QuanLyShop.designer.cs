#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyShop")]
	public partial class QuanLyShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCollection(Collection instance);
    partial void UpdateCollection(Collection instance);
    partial void DeleteCollection(Collection instance);
    partial void InsertCollectionProduct(CollectionProduct instance);
    partial void UpdateCollectionProduct(CollectionProduct instance);
    partial void DeleteCollectionProduct(CollectionProduct instance);
    partial void InsertColor(Color instance);
    partial void UpdateColor(Color instance);
    partial void DeleteColor(Color instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertGroupUser(GroupUser instance);
    partial void UpdateGroupUser(GroupUser instance);
    partial void DeleteGroupUser(GroupUser instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void Insertproduct_voucher(product_voucher instance);
    partial void Updateproduct_voucher(product_voucher instance);
    partial void Deleteproduct_voucher(product_voucher instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductVariant(ProductVariant instance);
    partial void UpdateProductVariant(ProductVariant instance);
    partial void DeleteProductVariant(ProductVariant instance);
    partial void InsertQLPhanQuyen(QLPhanQuyen instance);
    partial void UpdateQLPhanQuyen(QLPhanQuyen instance);
    partial void DeleteQLPhanQuyen(QLPhanQuyen instance);
    partial void InsertScreen(Screen instance);
    partial void UpdateScreen(Screen instance);
    partial void DeleteScreen(Screen instance);
    partial void InsertSize(Size instance);
    partial void UpdateSize(Size instance);
    partial void DeleteSize(Size instance);
    partial void InsertUser_GroupUser(User_GroupUser instance);
    partial void UpdateUser_GroupUser(User_GroupUser instance);
    partial void DeleteUser_GroupUser(User_GroupUser instance);
    #endregion
		
		public QuanLyShopDataContext() : 
				base(global::DTO.Properties.Settings.Default.QuanLyShopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Collection> Collections
		{
			get
			{
				return this.GetTable<Collection>();
			}
		}
		
		public System.Data.Linq.Table<CollectionProduct> CollectionProducts
		{
			get
			{
				return this.GetTable<CollectionProduct>();
			}
		}
		
		public System.Data.Linq.Table<Color> Colors
		{
			get
			{
				return this.GetTable<Color>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<GroupUser> GroupUsers
		{
			get
			{
				return this.GetTable<GroupUser>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<product_voucher> product_vouchers
		{
			get
			{
				return this.GetTable<product_voucher>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductVariant> ProductVariants
		{
			get
			{
				return this.GetTable<ProductVariant>();
			}
		}
		
		public System.Data.Linq.Table<QLPhanQuyen> QLPhanQuyens
		{
			get
			{
				return this.GetTable<QLPhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<Screen> Screens
		{
			get
			{
				return this.GetTable<Screen>();
			}
		}
		
		public System.Data.Linq.Table<Size> Sizes
		{
			get
			{
				return this.GetTable<Size>();
			}
		}
		
		public System.Data.Linq.Table<User_GroupUser> User_GroupUsers
		{
			get
			{
				return this.GetTable<User_GroupUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _status;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _address;
		
		private string _gender;
		
		private string _avatar;
		
		private string _background;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<product_voucher> _product_vouchers;
		
		private EntitySet<User_GroupUser> _User_GroupUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnavatarChanging(string value);
    partial void OnavatarChanged();
    partial void OnbackgroundChanging(string value);
    partial void OnbackgroundChanged();
    #endregion
		
		public Account()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._product_vouchers = new EntitySet<product_voucher>(new Action<product_voucher>(this.attach_product_vouchers), new Action<product_voucher>(this.detach_product_vouchers));
			this._User_GroupUsers = new EntitySet<User_GroupUser>(new Action<User_GroupUser>(this.attach_User_GroupUsers), new Action<User_GroupUser>(this.detach_User_GroupUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(12)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(5)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="VarChar(20)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this.OnavatarChanging(value);
					this.SendPropertyChanging();
					this._avatar = value;
					this.SendPropertyChanged("avatar");
					this.OnavatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_background", DbType="VarChar(20)")]
		public string background
		{
			get
			{
				return this._background;
			}
			set
			{
				if ((this._background != value))
				{
					this.OnbackgroundChanging(value);
					this.SendPropertyChanging();
					this._background = value;
					this.SendPropertyChanged("background");
					this.OnbackgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Feedback", Storage="_Feedbacks", ThisKey="username", OtherKey="username")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order", Storage="_Orders", ThisKey="username", OtherKey="username")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_product_voucher", Storage="_product_vouchers", ThisKey="username", OtherKey="username")]
		public EntitySet<product_voucher> product_vouchers
		{
			get
			{
				return this._product_vouchers;
			}
			set
			{
				this._product_vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_User_GroupUser", Storage="_User_GroupUsers", ThisKey="username", OtherKey="username")]
		public EntitySet<User_GroupUser> User_GroupUsers
		{
			get
			{
				return this._User_GroupUsers;
			}
			set
			{
				this._User_GroupUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_product_vouchers(product_voucher entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_product_vouchers(product_voucher entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_User_GroupUsers(User_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_User_GroupUsers(User_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _voucher_id;
		
		private string _dateStart;
		
		private System.Nullable<System.DateTime> _dateEnd;
		
		private System.Nullable<int> _discount;
		
		private string _tiltle;
		
		private string _discription;
		
		private System.Nullable<bool> _status;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<product_voucher> _product_vouchers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvoucher_idChanging(int value);
    partial void Onvoucher_idChanged();
    partial void OndateStartChanging(string value);
    partial void OndateStartChanged();
    partial void OndateEndChanging(System.Nullable<System.DateTime> value);
    partial void OndateEndChanged();
    partial void OndiscountChanging(System.Nullable<int> value);
    partial void OndiscountChanged();
    partial void OntiltleChanging(string value);
    partial void OntiltleChanged();
    partial void OndiscriptionChanging(string value);
    partial void OndiscriptionChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public Voucher()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._product_vouchers = new EntitySet<product_voucher>(new Action<product_voucher>(this.attach_product_vouchers), new Action<product_voucher>(this.detach_product_vouchers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int voucher_id
		{
			get
			{
				return this._voucher_id;
			}
			set
			{
				if ((this._voucher_id != value))
				{
					this.Onvoucher_idChanging(value);
					this.SendPropertyChanging();
					this._voucher_id = value;
					this.SendPropertyChanged("voucher_id");
					this.Onvoucher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateStart", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string dateStart
		{
			get
			{
				return this._dateStart;
			}
			set
			{
				if ((this._dateStart != value))
				{
					this.OndateStartChanging(value);
					this.SendPropertyChanging();
					this._dateStart = value;
					this.SendPropertyChanged("dateStart");
					this.OndateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> dateEnd
		{
			get
			{
				return this._dateEnd;
			}
			set
			{
				if ((this._dateEnd != value))
				{
					this.OndateEndChanging(value);
					this.SendPropertyChanging();
					this._dateEnd = value;
					this.SendPropertyChanged("dateEnd");
					this.OndateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tiltle", DbType="NVarChar(50)")]
		public string tiltle
		{
			get
			{
				return this._tiltle;
			}
			set
			{
				if ((this._tiltle != value))
				{
					this.OntiltleChanging(value);
					this.SendPropertyChanging();
					this._tiltle = value;
					this.SendPropertyChanged("tiltle");
					this.OntiltleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discription", DbType="NVarChar(255)")]
		public string discription
		{
			get
			{
				return this._discription;
			}
			set
			{
				if ((this._discription != value))
				{
					this.OndiscriptionChanging(value);
					this.SendPropertyChanging();
					this._discription = value;
					this.SendPropertyChanged("discription");
					this.OndiscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Order", Storage="_Orders", ThisKey="voucher_id", OtherKey="voucher_id")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_product_voucher", Storage="_product_vouchers", ThisKey="voucher_id", OtherKey="voucher_id")]
		public EntitySet<product_voucher> product_vouchers
		{
			get
			{
				return this._product_vouchers;
			}
			set
			{
				this._product_vouchers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
		
		private void attach_product_vouchers(product_voucher entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_product_vouchers(product_voucher entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _category_id;
		
		private string _category_name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="NVarChar(50)")]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collection")]
	public partial class Collection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _image;
		
		private string _review;
		
		private EntitySet<CollectionProduct> _CollectionProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnreviewChanging(string value);
    partial void OnreviewChanged();
    #endregion
		
		public Collection()
		{
			this._CollectionProducts = new EntitySet<CollectionProduct>(new Action<CollectionProduct>(this.attach_CollectionProducts), new Action<CollectionProduct>(this.detach_CollectionProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review", DbType="NVarChar(MAX)")]
		public string review
		{
			get
			{
				return this._review;
			}
			set
			{
				if ((this._review != value))
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_CollectionProduct", Storage="_CollectionProducts", ThisKey="id", OtherKey="collection_id")]
		public EntitySet<CollectionProduct> CollectionProducts
		{
			get
			{
				return this._CollectionProducts;
			}
			set
			{
				this._CollectionProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollectionProducts(CollectionProduct entity)
		{
			this.SendPropertyChanging();
			entity.Collection = this;
		}
		
		private void detach_CollectionProducts(CollectionProduct entity)
		{
			this.SendPropertyChanging();
			entity.Collection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollectionProduct")]
	public partial class CollectionProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _product_id;
		
		private int _collection_id;
		
		private EntityRef<Collection> _Collection;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Oncollection_idChanging(int value);
    partial void Oncollection_idChanged();
    #endregion
		
		public CollectionProduct()
		{
			this._Collection = default(EntityRef<Collection>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collection_id", DbType="Int NOT NULL")]
		public int collection_id
		{
			get
			{
				return this._collection_id;
			}
			set
			{
				if ((this._collection_id != value))
				{
					if (this._Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncollection_idChanging(value);
					this.SendPropertyChanging();
					this._collection_id = value;
					this.SendPropertyChanged("collection_id");
					this.Oncollection_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Collection_CollectionProduct", Storage="_Collection", ThisKey="collection_id", OtherKey="id", IsForeignKey=true)]
		public Collection Collection
		{
			get
			{
				return this._Collection.Entity;
			}
			set
			{
				Collection previousValue = this._Collection.Entity;
				if (((previousValue != value) 
							|| (this._Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Collection.Entity = null;
						previousValue.CollectionProducts.Remove(this);
					}
					this._Collection.Entity = value;
					if ((value != null))
					{
						value.CollectionProducts.Add(this);
						this._collection_id = value.id;
					}
					else
					{
						this._collection_id = default(int);
					}
					this.SendPropertyChanged("Collection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CollectionProduct", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CollectionProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CollectionProducts.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colors")]
	public partial class Color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _color_id;
		
		private string _color_name;
		
		private EntitySet<ProductVariant> _ProductVariants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncolor_idChanging(int value);
    partial void Oncolor_idChanged();
    partial void Oncolor_nameChanging(string value);
    partial void Oncolor_nameChanged();
    #endregion
		
		public Color()
		{
			this._ProductVariants = new EntitySet<ProductVariant>(new Action<ProductVariant>(this.attach_ProductVariants), new Action<ProductVariant>(this.detach_ProductVariants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_name", DbType="NVarChar(20)")]
		public string color_name
		{
			get
			{
				return this._color_name;
			}
			set
			{
				if ((this._color_name != value))
				{
					this.Oncolor_nameChanging(value);
					this.SendPropertyChanging();
					this._color_name = value;
					this.SendPropertyChanged("color_name");
					this.Oncolor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Color_ProductVariant", Storage="_ProductVariants", ThisKey="color_id", OtherKey="color_id")]
		public EntitySet<ProductVariant> ProductVariants
		{
			get
			{
				return this._ProductVariants;
			}
			set
			{
				this._ProductVariants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductVariants(ProductVariant entity)
		{
			this.SendPropertyChanging();
			entity.Color = this;
		}
		
		private void detach_ProductVariants(ProductVariant entity)
		{
			this.SendPropertyChanging();
			entity.Color = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private string _username;
		
		private System.Nullable<int> _rating;
		
		private string _discription;
		
		private System.Nullable<System.DateTime> _dateFB;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnratingChanging(System.Nullable<int> value);
    partial void OnratingChanged();
    partial void OndiscriptionChanging(string value);
    partial void OndiscriptionChanged();
    partial void OndateFBChanging(System.Nullable<System.DateTime> value);
    partial void OndateFBChanged();
    #endregion
		
		public Feedback()
		{
			this._Account = default(EntityRef<Account>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int")]
		public System.Nullable<int> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discription", DbType="NVarChar(255)")]
		public string discription
		{
			get
			{
				return this._discription;
			}
			set
			{
				if ((this._discription != value))
				{
					this.OndiscriptionChanging(value);
					this.SendPropertyChanging();
					this._discription = value;
					this.SendPropertyChanged("discription");
					this.OndiscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFB", DbType="Date")]
		public System.Nullable<System.DateTime> dateFB
		{
			get
			{
				return this._dateFB;
			}
			set
			{
				if ((this._dateFB != value))
				{
					this.OndateFBChanging(value);
					this.SendPropertyChanging();
					this._dateFB = value;
					this.SendPropertyChanged("dateFB");
					this.OndateFBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Feedback", Storage="_Account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Feedback", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupUsers")]
	public partial class GroupUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idGroup;
		
		private string _Name;
		
		private string _Note;
		
		private EntitySet<QLPhanQuyen> _QLPhanQuyens;
		
		private EntitySet<User_GroupUser> _User_GroupUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGroupChanging(string value);
    partial void OnidGroupChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public GroupUser()
		{
			this._QLPhanQuyens = new EntitySet<QLPhanQuyen>(new Action<QLPhanQuyen>(this.attach_QLPhanQuyens), new Action<QLPhanQuyen>(this.detach_QLPhanQuyens));
			this._User_GroupUsers = new EntitySet<User_GroupUser>(new Action<User_GroupUser>(this.attach_User_GroupUsers), new Action<User_GroupUser>(this.detach_User_GroupUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupUser_QLPhanQuyen", Storage="_QLPhanQuyens", ThisKey="idGroup", OtherKey="idGroup")]
		public EntitySet<QLPhanQuyen> QLPhanQuyens
		{
			get
			{
				return this._QLPhanQuyens;
			}
			set
			{
				this._QLPhanQuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupUser_User_GroupUser", Storage="_User_GroupUsers", ThisKey="idGroup", OtherKey="idGroup")]
		public EntitySet<User_GroupUser> User_GroupUsers
		{
			get
			{
				return this._User_GroupUsers;
			}
			set
			{
				this._User_GroupUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QLPhanQuyens(QLPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.GroupUser = this;
		}
		
		private void detach_QLPhanQuyens(QLPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.GroupUser = null;
		}
		
		private void attach_User_GroupUsers(User_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.GroupUser = this;
		}
		
		private void detach_User_GroupUsers(User_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.GroupUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Url;
		
		private int _product_id;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    #endregion
		
		public Image()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Image", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetails")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _variant_id;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<double> _subtotal;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<ProductVariant> _ProductVariant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onvariant_idChanging(int value);
    partial void Onvariant_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnsubtotalChanging(System.Nullable<double> value);
    partial void OnsubtotalChanged();
    #endregion
		
		public OrderDetail()
		{
			this._Order = default(EntityRef<Order>);
			this._ProductVariant = default(EntityRef<ProductVariant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variant_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int variant_id
		{
			get
			{
				return this._variant_id;
			}
			set
			{
				if ((this._variant_id != value))
				{
					if (this._ProductVariant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvariant_idChanging(value);
					this.SendPropertyChanging();
					this._variant_id = value;
					this.SendPropertyChanged("variant_id");
					this.Onvariant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtotal", DbType="Float")]
		public System.Nullable<double> subtotal
		{
			get
			{
				return this._subtotal;
			}
			set
			{
				if ((this._subtotal != value))
				{
					this.OnsubtotalChanging(value);
					this.SendPropertyChanging();
					this._subtotal = value;
					this.SendPropertyChanged("subtotal");
					this.OnsubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductVariant_OrderDetail", Storage="_ProductVariant", ThisKey="variant_id", OtherKey="variant_id", IsForeignKey=true)]
		public ProductVariant ProductVariant
		{
			get
			{
				return this._ProductVariant.Entity;
			}
			set
			{
				ProductVariant previousValue = this._ProductVariant.Entity;
				if (((previousValue != value) 
							|| (this._ProductVariant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductVariant.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._ProductVariant.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._variant_id = value.variant_id;
					}
					else
					{
						this._variant_id = default(int);
					}
					this.SendPropertyChanged("ProductVariant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private string _username;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<System.DateTime> _payment_date;
		
		private System.Nullable<int> _voucher_id;
		
		private System.Nullable<double> _amount;
		
		private string _address_deliver;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Voucher> _Voucher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Onpayment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpayment_dateChanged();
    partial void Onvoucher_idChanging(System.Nullable<int> value);
    partial void Onvoucher_idChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void Onaddress_deliverChanging(string value);
    partial void Onaddress_deliverChanged();
    #endregion
		
		public Order()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Account = default(EntityRef<Account>);
			this._Voucher = default(EntityRef<Voucher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="Date")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="Date")]
		public System.Nullable<System.DateTime> payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_id", DbType="Int")]
		public System.Nullable<int> voucher_id
		{
			get
			{
				return this._voucher_id;
			}
			set
			{
				if ((this._voucher_id != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvoucher_idChanging(value);
					this.SendPropertyChanging();
					this._voucher_id = value;
					this.SendPropertyChanged("voucher_id");
					this.Onvoucher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_deliver", DbType="NVarChar(255)")]
		public string address_deliver
		{
			get
			{
				return this._address_deliver;
			}
			set
			{
				if ((this._address_deliver != value))
				{
					this.Onaddress_deliverChanging(value);
					this.SendPropertyChanging();
					this._address_deliver = value;
					this.SendPropertyChanged("address_deliver");
					this.Onaddress_deliverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Order", Storage="_Account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Order", Storage="_Voucher", ThisKey="voucher_id", OtherKey="voucher_id", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._voucher_id = value.voucher_id;
					}
					else
					{
						this._voucher_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_voucher")]
	public partial class product_voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private int _voucher_id;
		
		private System.Nullable<int> _count;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Voucher> _Voucher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onvoucher_idChanging(int value);
    partial void Onvoucher_idChanged();
    partial void OncountChanging(System.Nullable<int> value);
    partial void OncountChanged();
    #endregion
		
		public product_voucher()
		{
			this._Account = default(EntityRef<Account>);
			this._Voucher = default(EntityRef<Voucher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int voucher_id
		{
			get
			{
				return this._voucher_id;
			}
			set
			{
				if ((this._voucher_id != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvoucher_idChanging(value);
					this.SendPropertyChanging();
					this._voucher_id = value;
					this.SendPropertyChanged("voucher_id");
					this.Onvoucher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_product_voucher", Storage="_Account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.product_vouchers.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.product_vouchers.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_product_voucher", Storage="_Voucher", ThisKey="voucher_id", OtherKey="voucher_id", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.product_vouchers.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.product_vouchers.Add(this);
						this._voucher_id = value.voucher_id;
					}
					else
					{
						this._voucher_id = default(int);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private string _product_name;
		
		private string _Title;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<int> _category_id;
		
		private string _ImageSP;
		
		private System.Nullable<double> _rating;
		
		private System.Nullable<System.DateTime> _Dateadd;
		
		private EntitySet<CollectionProduct> _CollectionProducts;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Image> _Images;
		
		private EntitySet<ProductVariant> _ProductVariants;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void Oncategory_idChanging(System.Nullable<int> value);
    partial void Oncategory_idChanged();
    partial void OnImageSPChanging(string value);
    partial void OnImageSPChanged();
    partial void OnratingChanging(System.Nullable<double> value);
    partial void OnratingChanged();
    partial void OnDateaddChanging(System.Nullable<System.DateTime> value);
    partial void OnDateaddChanged();
    #endregion
		
		public Product()
		{
			this._CollectionProducts = new EntitySet<CollectionProduct>(new Action<CollectionProduct>(this.attach_CollectionProducts), new Action<CollectionProduct>(this.detach_CollectionProducts));
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._ProductVariants = new EntitySet<ProductVariant>(new Action<ProductVariant>(this.attach_ProductVariants), new Action<ProductVariant>(this.detach_ProductVariants));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_name", DbType="NVarChar(100)")]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this.Onproduct_nameChanging(value);
					this.SendPropertyChanging();
					this._product_name = value;
					this.SendPropertyChanged("product_name");
					this.Onproduct_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int")]
		public System.Nullable<int> category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageSP", DbType="VarChar(50)")]
		public string ImageSP
		{
			get
			{
				return this._ImageSP;
			}
			set
			{
				if ((this._ImageSP != value))
				{
					this.OnImageSPChanging(value);
					this.SendPropertyChanging();
					this._ImageSP = value;
					this.SendPropertyChanged("ImageSP");
					this.OnImageSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Float")]
		public System.Nullable<double> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dateadd", DbType="Date")]
		public System.Nullable<System.DateTime> Dateadd
		{
			get
			{
				return this._Dateadd;
			}
			set
			{
				if ((this._Dateadd != value))
				{
					this.OnDateaddChanging(value);
					this.SendPropertyChanging();
					this._Dateadd = value;
					this.SendPropertyChanged("Dateadd");
					this.OnDateaddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CollectionProduct", Storage="_CollectionProducts", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<CollectionProduct> CollectionProducts
		{
			get
			{
				return this._CollectionProducts;
			}
			set
			{
				this._CollectionProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Feedback", Storage="_Feedbacks", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Image", Storage="_Images", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductVariant", Storage="_ProductVariants", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<ProductVariant> ProductVariants
		{
			get
			{
				return this._ProductVariants;
			}
			set
			{
				this._ProductVariants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CollectionProducts(CollectionProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CollectionProducts(CollectionProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductVariants(ProductVariant entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductVariants(ProductVariant entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductVariants")]
	public partial class ProductVariant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _variant_id;
		
		private System.Nullable<int> _product_id;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<int> _color_id;
		
		private System.Nullable<int> _size_id;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Color> _Color;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Size> _Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvariant_idChanging(int value);
    partial void Onvariant_idChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void Oncolor_idChanging(System.Nullable<int> value);
    partial void Oncolor_idChanged();
    partial void Onsize_idChanging(System.Nullable<int> value);
    partial void Onsize_idChanged();
    #endregion
		
		public ProductVariant()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Color = default(EntityRef<Color>);
			this._Product = default(EntityRef<Product>);
			this._Size = default(EntityRef<Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variant_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int variant_id
		{
			get
			{
				return this._variant_id;
			}
			set
			{
				if ((this._variant_id != value))
				{
					this.Onvariant_idChanging(value);
					this.SendPropertyChanging();
					this._variant_id = value;
					this.SendPropertyChanged("variant_id");
					this.Onvariant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
		public System.Nullable<int> product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="Int")]
		public System.Nullable<int> color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					if (this._Color.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_id", DbType="Int")]
		public System.Nullable<int> size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					if (this._Size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsize_idChanging(value);
					this.SendPropertyChanging();
					this._size_id = value;
					this.SendPropertyChanged("size_id");
					this.Onsize_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductVariant_OrderDetail", Storage="_OrderDetails", ThisKey="variant_id", OtherKey="variant_id")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Color_ProductVariant", Storage="_Color", ThisKey="color_id", OtherKey="color_id", IsForeignKey=true)]
		public Color Color
		{
			get
			{
				return this._Color.Entity;
			}
			set
			{
				Color previousValue = this._Color.Entity;
				if (((previousValue != value) 
							|| (this._Color.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Color.Entity = null;
						previousValue.ProductVariants.Remove(this);
					}
					this._Color.Entity = value;
					if ((value != null))
					{
						value.ProductVariants.Add(this);
						this._color_id = value.color_id;
					}
					else
					{
						this._color_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Color");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductVariant", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductVariants.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductVariants.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_ProductVariant", Storage="_Size", ThisKey="size_id", OtherKey="size_id", IsForeignKey=true)]
		public Size Size
		{
			get
			{
				return this._Size.Entity;
			}
			set
			{
				Size previousValue = this._Size.Entity;
				if (((previousValue != value) 
							|| (this._Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Size.Entity = null;
						previousValue.ProductVariants.Remove(this);
					}
					this._Size.Entity = value;
					if ((value != null))
					{
						value.ProductVariants.Add(this);
						this._size_id = value.size_id;
					}
					else
					{
						this._size_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductVariant = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductVariant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QLPhanQuyen")]
	public partial class QLPhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idGroup;
		
		private string _idScreen;
		
		private System.Nullable<bool> _status;
		
		private EntityRef<GroupUser> _GroupUser;
		
		private EntityRef<Screen> _Screen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGroupChanging(string value);
    partial void OnidGroupChanged();
    partial void OnidScreenChanging(string value);
    partial void OnidScreenChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public QLPhanQuyen()
		{
			this._GroupUser = default(EntityRef<GroupUser>);
			this._Screen = default(EntityRef<Screen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					if (this._GroupUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idScreen", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idScreen
		{
			get
			{
				return this._idScreen;
			}
			set
			{
				if ((this._idScreen != value))
				{
					if (this._Screen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidScreenChanging(value);
					this.SendPropertyChanging();
					this._idScreen = value;
					this.SendPropertyChanged("idScreen");
					this.OnidScreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupUser_QLPhanQuyen", Storage="_GroupUser", ThisKey="idGroup", OtherKey="idGroup", IsForeignKey=true)]
		public GroupUser GroupUser
		{
			get
			{
				return this._GroupUser.Entity;
			}
			set
			{
				GroupUser previousValue = this._GroupUser.Entity;
				if (((previousValue != value) 
							|| (this._GroupUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupUser.Entity = null;
						previousValue.QLPhanQuyens.Remove(this);
					}
					this._GroupUser.Entity = value;
					if ((value != null))
					{
						value.QLPhanQuyens.Add(this);
						this._idGroup = value.idGroup;
					}
					else
					{
						this._idGroup = default(string);
					}
					this.SendPropertyChanged("GroupUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screen_QLPhanQuyen", Storage="_Screen", ThisKey="idScreen", OtherKey="idScreen", IsForeignKey=true)]
		public Screen Screen
		{
			get
			{
				return this._Screen.Entity;
			}
			set
			{
				Screen previousValue = this._Screen.Entity;
				if (((previousValue != value) 
							|| (this._Screen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Screen.Entity = null;
						previousValue.QLPhanQuyens.Remove(this);
					}
					this._Screen.Entity = value;
					if ((value != null))
					{
						value.QLPhanQuyens.Add(this);
						this._idScreen = value.idScreen;
					}
					else
					{
						this._idScreen = default(string);
					}
					this.SendPropertyChanged("Screen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Screen")]
	public partial class Screen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idScreen;
		
		private string _name;
		
		private EntitySet<QLPhanQuyen> _QLPhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidScreenChanging(string value);
    partial void OnidScreenChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Screen()
		{
			this._QLPhanQuyens = new EntitySet<QLPhanQuyen>(new Action<QLPhanQuyen>(this.attach_QLPhanQuyens), new Action<QLPhanQuyen>(this.detach_QLPhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idScreen", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idScreen
		{
			get
			{
				return this._idScreen;
			}
			set
			{
				if ((this._idScreen != value))
				{
					this.OnidScreenChanging(value);
					this.SendPropertyChanging();
					this._idScreen = value;
					this.SendPropertyChanged("idScreen");
					this.OnidScreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screen_QLPhanQuyen", Storage="_QLPhanQuyens", ThisKey="idScreen", OtherKey="idScreen")]
		public EntitySet<QLPhanQuyen> QLPhanQuyens
		{
			get
			{
				return this._QLPhanQuyens;
			}
			set
			{
				this._QLPhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QLPhanQuyens(QLPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.Screen = this;
		}
		
		private void detach_QLPhanQuyens(QLPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.Screen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sizes")]
	public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _size_id;
		
		private string _size_name;
		
		private EntitySet<ProductVariant> _ProductVariants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsize_idChanging(int value);
    partial void Onsize_idChanged();
    partial void Onsize_nameChanging(string value);
    partial void Onsize_nameChanged();
    #endregion
		
		public Size()
		{
			this._ProductVariants = new EntitySet<ProductVariant>(new Action<ProductVariant>(this.attach_ProductVariants), new Action<ProductVariant>(this.detach_ProductVariants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					this.Onsize_idChanging(value);
					this.SendPropertyChanging();
					this._size_id = value;
					this.SendPropertyChanged("size_id");
					this.Onsize_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_name", DbType="NVarChar(20)")]
		public string size_name
		{
			get
			{
				return this._size_name;
			}
			set
			{
				if ((this._size_name != value))
				{
					this.Onsize_nameChanging(value);
					this.SendPropertyChanging();
					this._size_name = value;
					this.SendPropertyChanged("size_name");
					this.Onsize_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_ProductVariant", Storage="_ProductVariants", ThisKey="size_id", OtherKey="size_id")]
		public EntitySet<ProductVariant> ProductVariants
		{
			get
			{
				return this._ProductVariants;
			}
			set
			{
				this._ProductVariants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductVariants(ProductVariant entity)
		{
			this.SendPropertyChanging();
			entity.Size = this;
		}
		
		private void detach_ProductVariants(ProductVariant entity)
		{
			this.SendPropertyChanging();
			entity.Size = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_GroupUser")]
	public partial class User_GroupUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _idGroup;
		
		private string _Note;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<GroupUser> _GroupUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnidGroupChanging(string value);
    partial void OnidGroupChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public User_GroupUser()
		{
			this._Account = default(EntityRef<Account>);
			this._GroupUser = default(EntityRef<GroupUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					if (this._GroupUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_User_GroupUser", Storage="_Account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.User_GroupUsers.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.User_GroupUsers.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupUser_User_GroupUser", Storage="_GroupUser", ThisKey="idGroup", OtherKey="idGroup", IsForeignKey=true)]
		public GroupUser GroupUser
		{
			get
			{
				return this._GroupUser.Entity;
			}
			set
			{
				GroupUser previousValue = this._GroupUser.Entity;
				if (((previousValue != value) 
							|| (this._GroupUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupUser.Entity = null;
						previousValue.User_GroupUsers.Remove(this);
					}
					this._GroupUser.Entity = value;
					if ((value != null))
					{
						value.User_GroupUsers.Add(this);
						this._idGroup = value.idGroup;
					}
					else
					{
						this._idGroup = default(string);
					}
					this.SendPropertyChanged("GroupUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
